- name: Crear un grupo de loki
  group: name="{{ groupId }}"
  become: true

- name: Creando un usuario loki
  user:
    name: "{{ userId }}"
    group: "{{ groupId }}"
    system: yes
    shell: "/sbin/nologin"
    comment: "{{ userId }} nologin User"
    createhome: "no"
    state: present

- name: Ansible apt install Zip
  apt:
    name: zip
    state: present

- name: Instalando loki
  unarchive:
    src: "https://github.com/grafana/loki/releases/download/v{{ version }}/loki-linux-amd64.zip"
    dest: "/tmp/"
    remote_src: yes

- name: Copiando el archivo de loki a bin
  copy:
    src: "/tmp/loki-linux-amd64"
    dest: "/usr/local/bin/loki"
    owner: "{{ userId }}"
    group: "{{ groupId }}"
    remote_src: yes
    mode: 0755

# - name: Delete loki tmp folder
#   file:
#     path: '/tmp/loki-{{ version }}.linux-amd64'
#     state: absent

- name: Creando directorio
  file:
    path: "/data/loki"
    state: directory
    owner: "{{ userId }}"
    group: "{{ groupId }}"
    mode: 0755

- name: Creando directorio
  file:
    path: "/etc/loki"
    state: directory
    owner: "{{ userId }}"
    group: "{{ groupId }}"
    mode: 0755

- name: config file
  template:
    src: loki-local-config.yaml.j2
    dest: /etc/loki/loki-local-config.yaml

- name: Copiando systemd init file
  template:
    src: init.service.j2
    dest: /etc/systemd/system/loki.service
  notify: systemd_reload

- name: Iniciando el servicio de loki
  service:
    name: loki
    state: started
    enabled: yes

- name: Verificando que LOKI este levantado en el puerto correspondiente
  wait_for:
    host: localhost
    port: "{{ item }}"
    state: started         # Port should be open
    delay: 0               # No wait before first check (sec)
    timeout: 3             # Stop checking after timeout (sec)
  ignore_errors: yes
  with_items:
    - 3100
    - 22